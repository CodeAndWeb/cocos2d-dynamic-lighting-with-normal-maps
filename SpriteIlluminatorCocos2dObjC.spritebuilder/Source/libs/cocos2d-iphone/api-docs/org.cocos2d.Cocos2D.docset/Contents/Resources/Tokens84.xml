<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCEffectReflection.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCEffectReflection</TokenIdentifier>
			<Abstract type="html">CCEffectReflection uses reflection to simulate the appearance of a shiny object contained within
an environment. Reflection is controlled with two fresnel reflectance values, the normal map, and
a reflection environment sprite.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
            
			
			<NodeRef refid="84"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/setEnvironment:</TokenIdentifier>
			<Abstract type="html">The environment that will be reflected by the affected node. Typically this is a sprite
that is not visible in the scene as it is conceptually &quot;behind the viewer&quot; and only visible
where reflected by the affected node.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCSprite *environment</Declaration>
			
			
			<Anchor>//api/name/environment</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/environment</TokenIdentifier>
			<Abstract type="html">The environment that will be reflected by the affected node. Typically this is a sprite
that is not visible in the scene as it is conceptually &quot;behind the viewer&quot; and only visible
where reflected by the affected node.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCSprite *environment</Declaration>
			
			
			<Anchor>//api/name/environment</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectReflection/environment</TokenIdentifier>
			<Abstract type="html">The environment that will be reflected by the affected node. Typically this is a sprite
that is not visible in the scene as it is conceptually &quot;behind the viewer&quot; and only visible
where reflected by the affected node.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCSprite *environment</Declaration>
			
			
			<Anchor>//api/name/environment</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/setNormalMap:</TokenIdentifier>
			<Abstract type="html">The normal map that encodes the normal vectors of the affected node. Each pixel in the normal
map is a 3 component vector that is perpendicular to the surface of the sprite at that point.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCSpriteFrame *normalMap</Declaration>
			
			
			<Anchor>//api/name/normalMap</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/normalMap</TokenIdentifier>
			<Abstract type="html">The normal map that encodes the normal vectors of the affected node. Each pixel in the normal
map is a 3 component vector that is perpendicular to the surface of the sprite at that point.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCSpriteFrame *normalMap</Declaration>
			
			
			<Anchor>//api/name/normalMap</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectReflection/normalMap</TokenIdentifier>
			<Abstract type="html">The normal map that encodes the normal vectors of the affected node. Each pixel in the normal
map is a 3 component vector that is perpendicular to the surface of the sprite at that point.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) CCSpriteFrame *normalMap</Declaration>
			
			
			<Anchor>//api/name/normalMap</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/setShininess:</TokenIdentifier>
			<Abstract type="html">The overall shininess of the attached sprite. This value is in the range [0..1] and it controls
how much of the reflected environment contributes to the final color of the affected pixels.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float shininess</Declaration>
			
			
			<Anchor>//api/name/shininess</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/shininess</TokenIdentifier>
			<Abstract type="html">The overall shininess of the attached sprite. This value is in the range [0..1] and it controls
how much of the reflected environment contributes to the final color of the affected pixels.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float shininess</Declaration>
			
			
			<Anchor>//api/name/shininess</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectReflection/shininess</TokenIdentifier>
			<Abstract type="html">The overall shininess of the attached sprite. This value is in the range [0..1] and it controls
how much of the reflected environment contributes to the final color of the affected pixels.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float shininess</Declaration>
			
			
			<Anchor>//api/name/shininess</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/setFresnelBias:</TokenIdentifier>
			<Abstract type="html">The bias term in the fresnel reflectance equation:
reflectance = max(0.0, fresnelBias + (1 - fresnelBias) * pow((1 - nDotV), fresnelPower
This value is in the range [0..1] and it controls the constant (view angle independent) contribution
to the reflectance equation.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float fresnelBias</Declaration>
			
			
			<Anchor>//api/name/fresnelBias</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/fresnelBias</TokenIdentifier>
			<Abstract type="html">The bias term in the fresnel reflectance equation:
reflectance = max(0.0, fresnelBias + (1 - fresnelBias) * pow((1 - nDotV), fresnelPower
This value is in the range [0..1] and it controls the constant (view angle independent) contribution
to the reflectance equation.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float fresnelBias</Declaration>
			
			
			<Anchor>//api/name/fresnelBias</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectReflection/fresnelBias</TokenIdentifier>
			<Abstract type="html">The bias term in the fresnel reflectance equation:
reflectance = max(0.0, fresnelBias + (1 - fresnelBias) * pow((1 - nDotV), fresnelPower
This value is in the range [0..1] and it controls the constant (view angle independent) contribution
to the reflectance equation.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float fresnelBias</Declaration>
			
			
			<Anchor>//api/name/fresnelBias</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/setFresnelPower:</TokenIdentifier>
			<Abstract type="html">The power term in the fresnel reflectance equation:
reflectance = max(0.0, fresnelBias + (1 - fresnelBias * pow((1 - nDotV), fresnelPower))
This value is in the range [0..inf] and it controls the view angle dependent contribution
to the reflectance equation.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float fresnelPower</Declaration>
			
			
			<Anchor>//api/name/fresnelPower</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/fresnelPower</TokenIdentifier>
			<Abstract type="html">The power term in the fresnel reflectance equation:
reflectance = max(0.0, fresnelBias + (1 - fresnelBias * pow((1 - nDotV), fresnelPower))
This value is in the range [0..inf] and it controls the view angle dependent contribution
to the reflectance equation.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float fresnelPower</Declaration>
			
			
			<Anchor>//api/name/fresnelPower</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCEffectReflection/fresnelPower</TokenIdentifier>
			<Abstract type="html">The power term in the fresnel reflectance equation:
reflectance = max(0.0, fresnelBias + (1 - fresnelBias * pow((1 - nDotV), fresnelPower))
This value is in the range [0..inf] and it controls the view angle dependent contribution
to the reflectance equation.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) float fresnelPower</Declaration>
			
			
			<Anchor>//api/name/fresnelPower</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/init</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectReflection object with the following default parameters:
fresnelBias = 1.0, fresnelPower = 0.0, environment = nil, normalMap = nil</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>- (id)init</Declaration>
			
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/initWithShininess:environment:</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectReflection object with the specified environment and normal map and the following default parameters:
fresnelBias = 1.0, fresnelPower = 0.0, normalMap = nil</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>- (id)initWithShininess:(float)shininess environment:(CCSprite *)environment</Declaration>
			<Parameters>
				<Parameter>
					<Name>shininess</Name>
					<Abstract type="html">The overall shininess of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>environment</Name>
					<Abstract type="html">The environment image that will be reflected by the affected node.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithShininess:environment:</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/initWithShininess:environment:normalMap:</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectReflection object with the specified environment and normal map and the following default parameters:
fresnelBias = 1.0, fresnelPower = 0.0</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>- (id)initWithShininess:(float)shininess environment:(CCSprite *)environment normalMap:(CCSpriteFrame *)normalMap</Declaration>
			<Parameters>
				<Parameter>
					<Name>shininess</Name>
					<Abstract type="html">The overall shininess of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>environment</Name>
					<Abstract type="html">The environment image that will be reflected by the affected node.</Abstract>
				</Parameter><Parameter>
					<Name>normalMap</Name>
					<Abstract type="html">The normal map of the affected node. This can also be specified as a property of the affected sprite.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithShininess:environment:normalMap:</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/initWithShininess:fresnelBias:fresnelPower:environment:</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectReflection object with the specified parameters and a nil normal map.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>- (id)initWithShininess:(float)shininess fresnelBias:(float)bias fresnelPower:(float)power environment:(CCSprite *)environment</Declaration>
			<Parameters>
				<Parameter>
					<Name>shininess</Name>
					<Abstract type="html">The overall shininess of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>bias</Name>
					<Abstract type="html">The bias term in the fresnel reflectance equation.</Abstract>
				</Parameter><Parameter>
					<Name>power</Name>
					<Abstract type="html">The power term in the fresnel reflectance equation.</Abstract>
				</Parameter><Parameter>
					<Name>environment</Name>
					<Abstract type="html">The environment image that will be reflected by the affected node.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithShininess:fresnelBias:fresnelPower:environment:</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCEffectReflection/initWithShininess:fresnelBias:fresnelPower:environment:normalMap:</TokenIdentifier>
			<Abstract type="html">Initializes a CCEffectReflection object with the specified parameters.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>- (id)initWithShininess:(float)shininess fresnelBias:(float)bias fresnelPower:(float)power environment:(CCSprite *)environment normalMap:(CCSpriteFrame *)normalMap</Declaration>
			<Parameters>
				<Parameter>
					<Name>shininess</Name>
					<Abstract type="html">The overall shininess of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>bias</Name>
					<Abstract type="html">The bias term in the fresnel reflectance equation.</Abstract>
				</Parameter><Parameter>
					<Name>power</Name>
					<Abstract type="html">The power term in the fresnel reflectance equation.</Abstract>
				</Parameter><Parameter>
					<Name>environment</Name>
					<Abstract type="html">The environment image that will be reflected by the affected node.</Abstract>
				</Parameter><Parameter>
					<Name>normalMap</Name>
					<Abstract type="html">The normal map of the affected node. This can also be specified as a property of the affected sprite.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithShininess:fresnelBias:fresnelPower:environment:normalMap:</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCEffectReflection/effectWithShininess:environment:</TokenIdentifier>
			<Abstract type="html">Creates a CCEffectReflection object with the specified environment and the following default parameters:
fresnelBias = 1.0, fresnelPower = 0.0, normalMap = nil</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>+ (id)effectWithShininess:(float)shininess environment:(CCSprite *)environment</Declaration>
			<Parameters>
				<Parameter>
					<Name>shininess</Name>
					<Abstract type="html">The overall shininess of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>environment</Name>
					<Abstract type="html">The environment image that will be reflected by the affected node.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/effectWithShininess:environment:</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCEffectReflection/effectWithShininess:environment:normalMap:</TokenIdentifier>
			<Abstract type="html">Creates a CCEffectReflection object with the specified environment and normal map and the following default parameters:
fresnelBias = 1.0, fresnelPower = 0.0</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>+ (id)effectWithShininess:(float)shininess environment:(CCSprite *)environment normalMap:(CCSpriteFrame *)normalMap</Declaration>
			<Parameters>
				<Parameter>
					<Name>shininess</Name>
					<Abstract type="html">The overall shininess of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>environment</Name>
					<Abstract type="html">The environment image that will be reflected by the affected node.</Abstract>
				</Parameter><Parameter>
					<Name>normalMap</Name>
					<Abstract type="html">The normal map of the affected node. This can also be specified as a property of the affected sprite.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/effectWithShininess:environment:normalMap:</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCEffectReflection/effectWithShininess:fresnelBias:fresnelPower:environment:</TokenIdentifier>
			<Abstract type="html">Creates a CCEffectReflection object with the specified parameters and nil normal map.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>+ (id)effectWithShininess:(float)shininess fresnelBias:(float)bias fresnelPower:(float)power environment:(CCSprite *)environment</Declaration>
			<Parameters>
				<Parameter>
					<Name>shininess</Name>
					<Abstract type="html">The overall shininess of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>bias</Name>
					<Abstract type="html">The bias term in the fresnel reflectance equation.</Abstract>
				</Parameter><Parameter>
					<Name>power</Name>
					<Abstract type="html">The power term in the fresnel reflectance equation.</Abstract>
				</Parameter><Parameter>
					<Name>environment</Name>
					<Abstract type="html">The environment image that will be reflected by the affected node.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/effectWithShininess:fresnelBias:fresnelPower:environment:</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCEffectReflection/effectWithShininess:fresnelBias:fresnelPower:environment:normalMap:</TokenIdentifier>
			<Abstract type="html">Creates a CCEffectReflection object with the specified parameters.</Abstract>
			<DeclaredIn>CCEffectReflection.h</DeclaredIn>
			
			<Declaration>+ (id)effectWithShininess:(float)shininess fresnelBias:(float)bias fresnelPower:(float)power environment:(CCSprite *)environment normalMap:(CCSpriteFrame *)normalMap</Declaration>
			<Parameters>
				<Parameter>
					<Name>shininess</Name>
					<Abstract type="html">The overall shininess of the effect.</Abstract>
				</Parameter><Parameter>
					<Name>bias</Name>
					<Abstract type="html">The bias term in the fresnel reflectance equation.</Abstract>
				</Parameter><Parameter>
					<Name>power</Name>
					<Abstract type="html">The power term in the fresnel reflectance equation.</Abstract>
				</Parameter><Parameter>
					<Name>environment</Name>
					<Abstract type="html">The environment image that will be reflected by the affected node.</Abstract>
				</Parameter><Parameter>
					<Name>normalMap</Name>
					<Abstract type="html">The normal map of the affected node. This can also be specified as a property of the affected sprite.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The CCEffectReflection object.</Abstract></ReturnValue>
			<Anchor>//api/name/effectWithShininess:fresnelBias:fresnelPower:environment:normalMap:</Anchor>
            <NodeRef refid="84"/>
		</Token>
		
        
	</File>
</Tokens>